# DO NOT EDIT: automatically generated by `rake builtins:vim`.
# see tasks/vim.rake for more info.
module Rugments
  module Lexers
    class VimL
      def self.keywords
        @keywords ||= { command: [%w(a a), %w(ab ab), %w(abc abclear), %w(abo aboveleft), %w(al all), %w(ar ar), %w(ar args), %w(arga argadd), %w(argd argdelete), %w(argdo argdo), %w(arge argedit), %w(argg argglobal), %w(argl arglocal), %w(argu argument), %w(as ascii), %w(au au), %w(b buffer), %w(bN bNext), %w(ba ball), %w(bad badd), %w(bd bdelete), %w(bel belowright), %w(bf bfirst), %w(bl blast), %w(bm bmodified), %w(bn bnext), %w(bo botright), %w(bp bprevious), %w(br br), %w(br brewind), %w(brea break), %w(breaka breakadd), %w(breakd breakdel), %w(breakl breaklist), %w(bro browse), %w(bu bu), %w(buf buf), %w(bufdo bufdo), %w(buffers buffers), %w(bun bunload), %w(bw bwipeout), %w(c c), %w(c change), %w(cN cN), %w(cN cNext), %w(cNf cNf), %w(cNf cNfile), %w(cabc cabclear), %w(cad cad), %w(cad caddexpr), %w(caddb caddbuffer), %w(caddf caddfile), %w(cal call), %w(cat catch), %w(cb cbuffer), %w(cc cc), %w(ccl cclose), %w(cd cd), %w(ce center), %w(cex cexpr), %w(cf cfile), %w(cfir cfirst), %w(cg cgetfile), %w(cgetb cgetbuffer), %w(cgete cgetexpr), %w(changes changes), %w(chd chdir), %w(che checkpath), %w(checkt checktime), %w(cl cl), %w(cl clist), %w(cla clast), %w(clo close), %w(cmapc cmapclear), %w(cn cn), %w(cn cnext), %w(cnew cnewer), %w(cnf cnf), %w(cnf cnfile), %w(co copy), %w(col colder), %w(colo colorscheme), %w(com com), %w(comc comclear), %w(comp compiler), %w(con con), %w(con continue), %w(conf confirm), %w(cope copen), %w(cp cprevious), %w(cpf cpfile), %w(cq cquit), %w(cr crewind), %w(cs cs), %w(cscope cscope), %w(cstag cstag), %w(cuna cunabbrev), %w(cw cwindow), %w(d d), %w(d delete), %w(de de), %w(debug debug), %w(debugg debuggreedy), %w(del del), %w(delc delcommand), %w(delel delel), %w(delep delep), %w(deletel deletel), %w(deletep deletep), %w(deletl deletl), %w(deletp deletp), %w(delf delf), %w(delf delfunction), %w(dell dell), %w(delm delmarks), %w(delp delp), %w(dep dep), %w(di di), %w(di display), %w(diffg diffget), %w(diffo diffoff), %w(diffp diffpatch), %w(diffpu diffput), %w(diffs diffsplit), %w(difft diffthis), %w(diffu diffupdate), %w(dig dig), %w(dig digraphs), %w(dir dir), %w(dj djump), %w(dl dl), %w(dli dlist), %w(do do), %w(doau doau), %w(dp dp), %w(dr drop), %w(ds dsearch), %w(dsp dsplit), %w(e e), %w(e edit), %w(ea ea), %w(earlier earlier), %w(ec ec), %w(echoe echoerr), %w(echom echomsg), %w(echon echon), %w(el else), %w(elsei elseif), %w(em emenu), %w(en en), %w(en endif), %w(endf endf), %w(endf endfunction), %w(endfo endfor), %w(endfun endfun), %w(endt endtry), %w(endw endwhile), %w(ene enew), %w(ex ex), %w(exi exit), %w(exu exusage), %w(f f), %w(f file), %w(files files), %w(filet filet), %w(filetype filetype), %w(fin fin), %w(fin find), %w(fina finally), %w(fini finish), %w(fir first), %w(fix fixdel), %w(fo fold), %w(foldc foldclose), %w(foldd folddoopen), %w(folddoc folddoclosed), %w(foldo foldopen), %w(for for), %w(fu fu), %w(fu function), %w(fun fun), %w(g g), %w(go goto), %w(gr grep), %w(grepa grepadd), %w(gui gui), %w(gvim gvim), %w(h h), %w(h help), %w(ha hardcopy), %w(helpf helpfind), %w(helpg helpgrep), %w(helpt helptags), %w(hi hi), %w(hid hide), %w(his history), %w(i i), %w(ia ia), %w(iabc iabclear), %w(if if), %w(ij ijump), %w(il ilist), %w(imapc imapclear), %w(in in), %w(intro intro), %w(is isearch), %w(isp isplit), %w(iuna iunabbrev), %w(j join), %w(ju jumps), %w(k k), %w(kee keepmarks), %w(keepa keepa), %w(keepalt keepalt), %w(keepj keepjumps), %w(keepp keeppatterns), %w(l l), %w(l list), %w(lN lN), %w(lN lNext), %w(lNf lNf), %w(lNf lNfile), %w(la la), %w(la last), %w(lad lad), %w(lad laddexpr), %w(laddb laddbuffer), %w(laddf laddfile), %w(lan lan), %w(lan language), %w(lat lat), %w(later later), %w(lb lbuffer), %w(lc lcd), %w(lch lchdir), %w(lcl lclose), %w(lcs lcs), %w(lcscope lcscope), %w(le left), %w(lefta leftabove), %w(lex lexpr), %w(lf lfile), %w(lfir lfirst), %w(lg lgetfile), %w(lgetb lgetbuffer), %w(lgete lgetexpr), %w(lgr lgrep), %w(lgrepa lgrepadd), %w(lh lhelpgrep), %w(ll ll), %w(lla llast), %w(lli llist), %w(lmak lmake), %w(lmapc lmapclear), %w(lne lne), %w(lne lnext), %w(lnew lnewer), %w(lnf lnf), %w(lnf lnfile), %w(lo lo), %w(lo loadview), %w(loadk loadk), %w(loadkeymap loadkeymap), %w(loc lockmarks), %w(lockv lockvar), %w(lol lolder), %w(lop lopen), %w(lp lprevious), %w(lpf lpfile), %w(lr lrewind), %w(ls ls), %w(lt ltag), %w(lua lua), %w(luado luado), %w(luafile luafile), %w(lv lvimgrep), %w(lvimgrepa lvimgrepadd), %w(lw lwindow), %w(m move), %w(ma ma), %w(ma mark), %w(mak make), %w(marks marks), %w(mat match), %w(menut menut), %w(menut menutranslate), %w(mes mes), %w(messages messages), %w(mk mk), %w(mk mkexrc), %w(mks mksession), %w(mksp mkspell), %w(mkv mkv), %w(mkv mkvimrc), %w(mkvie mkview), %w(mo mo), %w(mod mode), %w(mz mz), %w(mz mzscheme), %w(mzf mzfile), %w(n n), %w(n next), %w(nb nbkey), %w(nbc nbclose), %w(nbs nbstart), %w(ne ne), %w(new new), %w(nmapc nmapclear), %w(noa noa), %w(noautocmd noautocmd), %w(noh nohlsearch), %w(nu number), %w(o o), %w(o open), %w(ol oldfiles), %w(omapc omapclear), %w(on only), %w(opt options), %w(ownsyntax ownsyntax), %w(p p), %w(p print), %w(pc pclose), %w(pe pe), %w(pe perl), %w(ped pedit), %w(perld perldo), %w(po pop), %w(popu popu), %w(popu popup), %w(pp ppop), %w(pr pr), %w(pre preserve), %w(prev previous), %w(pro pro), %w(prof profile), %w(profd profdel), %w(promptf promptfind), %w(promptr promptrepl), %w(ps psearch), %w(ptN ptN), %w(ptN ptNext), %w(pta ptag), %w(ptf ptfirst), %w(ptj ptjump), %w(ptl ptlast), %w(ptn ptn), %w(ptn ptnext), %w(ptp ptprevious), %w(ptr ptrewind), %w(pts ptselect), %w(pu put), %w(pw pwd), %w(py py), %w(py python), %w(py3 py3), %w(py3 py3), %w(py3do py3do), %w(pydo pydo), %w(pyf pyfile), %w(python3 python3), %w(q q), %w(q quit), %w(qa qall), %w(quita quitall), %w(r r), %w(r read), %w(re re), %w(rec recover), %w(red red), %w(red redo), %w(redi redir), %w(redr redraw), %w(redraws redrawstatus), %w(reg registers), %w(res resize), %w(ret retab), %w(retu return), %w(rew rewind), %w(ri right), %w(rightb rightbelow), %w(ru ru), %w(ru runtime), %w(rub ruby), %w(rubyd rubydo), %w(rubyf rubyfile), %w(rundo rundo), %w(rv rviminfo), %w(sN sNext), %w(sa sargument), %w(sal sall), %w(san sandbox), %w(sav saveas), %w(sb sbuffer), %w(sbN sbNext), %w(sba sball), %w(sbf sbfirst), %w(sbl sblast), %w(sbm sbmodified), %w(sbn sbnext), %w(sbp sbprevious), %w(sbr sbrewind), %w(scrip scrip), %w(scrip scriptnames), %w(scripte scriptencoding), %w(scs scs), %w(scscope scscope), %w(se set), %w(setf setfiletype), %w(setg setglobal), %w(setl setlocal), %w(sf sfind), %w(sfir sfirst), %w(sh shell), %w(si si), %w(sig sig), %w(sign sign), %w(sil silent), %w(sim simalt), %w(sl sl), %w(sl sleep), %w(sla slast), %w(sm smagic), %w(sm smap), %w(sme sme), %w(smenu smenu), %w(sn snext), %w(sni sniff), %w(sno snomagic), %w(snoreme snoreme), %w(snoremenu snoremenu), %w(so so), %w(so source), %w(sor sort), %w(sp split), %w(spe spe), %w(spe spellgood), %w(spelld spelldump), %w(spelli spellinfo), %w(spellr spellrepall), %w(spellu spellundo), %w(spellw spellwrong), %w(spr sprevious), %w(sre srewind), %w(st st), %w(st stop), %w(sta stag), %w(star star), %w(star startinsert), %w(start start), %w(startg startgreplace), %w(startr startreplace), %w(stj stjump), %w(stopi stopinsert), %w(sts stselect), %w(sun sunhide), %w(sunme sunme), %w(sunmenu sunmenu), %w(sus suspend), %w(sv sview), %w(sw swapname), %w(sy sy), %w(syn syn), %w(sync sync), %w(syncbind syncbind), %w(syntime syntime), %w(t t), %w(tN tN), %w(tN tNext), %w(ta ta), %w(ta tag), %w(tab tab), %w(tabN tabN), %w(tabN tabNext), %w(tabc tabclose), %w(tabd tabdo), %w(tabe tabedit), %w(tabf tabfind), %w(tabfir tabfirst), %w(tabl tablast), %w(tabm tabmove), %w(tabn tabnext), %w(tabnew tabnew), %w(tabo tabonly), %w(tabp tabprevious), %w(tabr tabrewind), %w(tabs tabs), %w(tags tags), %w(tc tcl), %w(tcld tcldo), %w(tclf tclfile), %w(te tearoff), %w(tf tfirst), %w(th throw), %w(tj tjump), %w(tl tlast), %w(tm tm), %w(tm tmenu), %w(tn tn), %w(tn tnext), %w(to topleft), %w(tp tprevious), %w(tr tr), %w(tr trewind), %w(try try), %w(ts tselect), %w(tu tu), %w(tu tunmenu), %w(u u), %w(u undo), %w(un un), %w(una unabbreviate), %w(undoj undojoin), %w(undol undolist), %w(unh unhide), %w(unl unl), %w(unlo unlockvar), %w(uns unsilent), %w(up update), %w(v v), %w(ve ve), %w(ve version), %w(verb verbose), %w(vert vertical), %w(vi vi), %w(vi visual), %w(vie view), %w(vim vimgrep), %w(vimgrepa vimgrepadd), %w(viu viusage), %w(vmapc vmapclear), %w(vne vnew), %w(vs vsplit), %w(w w), %w(w write), %w(wN wNext), %w(wa wall), %w(wh while), %w(win win), %w(win winsize), %w(winc wincmd), %w(windo windo), %w(winp winpos), %w(wn wnext), %w(wp wprevious), %w(wq wq), %w(wqa wqall), %w(ws wsverb), %w(wundo wundo), %w(wv wviminfo), %w(x x), %w(x xit), %w(xa xall), %w(xmapc xmapclear), %w(xme xme), %w(xmenu xmenu), %w(xnoreme xnoreme), %w(xnoremenu xnoremenu), %w(xunme xunme), %w(xunmenu xunmenu), %w(xwininfo xwininfo), %w(y yank)], option: [], auto: [%w(BufAdd BufAdd), %w(BufCreate BufCreate), %w(BufDelete BufDelete), %w(BufEnter BufEnter), %w(BufFilePost BufFilePost), %w(BufFilePre BufFilePre), %w(BufHidden BufHidden), %w(BufLeave BufLeave), %w(BufNew BufNew), %w(BufNewFile BufNewFile), %w(BufRead BufRead), %w(BufReadCmd BufReadCmd), %w(BufReadPost BufReadPost), %w(BufReadPre BufReadPre), %w(BufUnload BufUnload), %w(BufWinEnter BufWinEnter), %w(BufWinLeave BufWinLeave), %w(BufWipeout BufWipeout), %w(BufWrite BufWrite), %w(BufWriteCmd BufWriteCmd), %w(BufWritePost BufWritePost), %w(BufWritePre BufWritePre), %w(Cmd Cmd), %w(CmdwinEnter CmdwinEnter), %w(CmdwinLeave CmdwinLeave), %w(ColorScheme ColorScheme), %w(CompleteDone CompleteDone), %w(CursorHold CursorHold), %w(CursorHoldI CursorHoldI), %w(CursorMoved CursorMoved), %w(CursorMovedI CursorMovedI), %w(EncodingChanged EncodingChanged), %w(FileAppendCmd FileAppendCmd), %w(FileAppendPost FileAppendPost), %w(FileAppendPre FileAppendPre), %w(FileChangedRO FileChangedRO), %w(FileChangedShell FileChangedShell), %w(FileChangedShellPost FileChangedShellPost), %w(FileEncoding FileEncoding), %w(FileReadCmd FileReadCmd), %w(FileReadPost FileReadPost), %w(FileReadPre FileReadPre), %w(FileType FileType), %w(FileWriteCmd FileWriteCmd), %w(FileWritePost FileWritePost), %w(FileWritePre FileWritePre), %w(FilterReadPost FilterReadPost), %w(FilterReadPre FilterReadPre), %w(FilterWritePost FilterWritePost), %w(FilterWritePre FilterWritePre), %w(FocusGained FocusGained), %w(FocusLost FocusLost), %w(FuncUndefined FuncUndefined), %w(GUIEnter GUIEnter), %w(GUIFailed GUIFailed), %w(InsertChange InsertChange), %w(InsertCharPre InsertCharPre), %w(InsertEnter InsertEnter), %w(InsertLeave InsertLeave), %w(MenuPopup MenuPopup), %w(QuickFixCmdPost QuickFixCmdPost), %w(QuickFixCmdPre QuickFixCmdPre), %w(QuitPre QuitPre), %w(RemoteReply RemoteReply), %w(SessionLoadPost SessionLoadPost), %w(ShellCmdPost ShellCmdPost), %w(ShellFilterPost ShellFilterPost), %w(SourceCmd SourceCmd), %w(SourcePre SourcePre), %w(SpellFileMissing SpellFileMissing), %w(StdinReadPost StdinReadPost), %w(StdinReadPre StdinReadPre), %w(SwapExists SwapExists), %w(Syntax Syntax), %w(TabEnter TabEnter), %w(TabLeave TabLeave), %w(TermChanged TermChanged), %w(TermResponse TermResponse), %w(TextChanged TextChanged), %w(TextChangedI TextChangedI), %w(User User), %w(UserGettingBored UserGettingBored), %w(VimEnter VimEnter), %w(VimLeave VimLeave), %w(VimLeavePre VimLeavePre), %w(VimResized VimResized), %w(WinEnter WinEnter), %w(WinLeave WinLeave), %w(event event)] }
      end
    end
  end
end
